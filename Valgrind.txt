
                Debugging and Checking Memory Leaks - Using Valgind
                ***************************************************
                13th Dec, 2016

                Debugging Tools Egs: GDB, Valgrind


    Make C programs with memory leakage and with memory freed properly.
    Compile them <gcc filename -o objfilename>

MEMLEAK.c
-------------------------------------------
#include <stdio.h>
#include <stdlib.h>
main() {
    int *arr = (int *)malloc(4 * sizeof(int));
    // not freed
    return 0;
}
-------------------------------------------

MEMFREE.c
-------------------------------------------
#include <stdio.h>
#include <stdlib.h>
main() {
    int *arr = (int *)malloc(4 * sizeof(int));
    free(arr); // freed
    return 0;
}
-------------------------------------------


    Run Valgrind on the object file <valgrind ./objfilename>

valgrind ./a.out

FOR LEAKING PROGRAM:
-------------------------------------------
==3368== Memcheck, a memory error detector
==3368== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3368== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==3368== Command: ./a.out
==3368== 
==3368== 
==3368== HEAP SUMMARY:
==3368==     in use at exit: 16 bytes in 1 blocks
==3368==   total heap usage: 1 allocs, 0 frees, 16 bytes allocated
==3368== 
==3368== LEAK SUMMARY:
==3368==    definitely lost: 16 bytes in 1 blocks
==3368==    indirectly lost: 0 bytes in 0 blocks
==3368==      possibly lost: 0 bytes in 0 blocks
==3368==    still reachable: 0 bytes in 0 blocks
==3368==         suppressed: 0 bytes in 0 blocks
==3368== Rerun with --leak-check=full to see details of leaked memory
==3368== 
==3368== For counts of detected and suppressed errors, rerun with: -v
==3368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
-------------------------------------------

FOR NON-LEAKING PROGRAM:
-------------------------------------------
==3405== Memcheck, a memory error detector
==3405== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3405== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==3405== Command: ./a.out
==3405== 
==3405== 
==3405== HEAP SUMMARY:
==3405==     in use at exit: 0 bytes in 0 blocks
==3405==   total heap usage: 1 allocs, 1 frees, 16 bytes allocated
==3405== 
==3405== All heap blocks were freed -- no leaks are possible
==3405== 
==3405== For counts of detected and suppressed errors, rerun with: -v
==3405== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
-------------------------------------------
